set nocompatible              " be iMproved, required
filetype off                  " required

call plug#begin('~/.vim/plugged')

" The following are examples of different formats supported.
" Keep Plug commands between vundle#begin/end.
" plugin on GitHub repo
Plug 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plug 'L9'
" Git plugin not hosted on GitHub
" Plug 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plug 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plug 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plug 'ascenator/L9', {'name': 'newL9'}

Plug 'scrooloose/nerdtree'
Plug 'majutsushi/tagbar'
Plug 'xolox/vim-easytags'
Plug 'xolox/vim-misc'
Plug 'airblade/vim-gitgutter'
Plug 'nvie/vim-flake8'
Plug 'suan/vim-instant-markdown', {'rtp': 'after'}
Plug 'dense-analysis/ale'
Plug 'fisadev/fixedtasklist.vim'
Plug 'nathanaelkane/vim-indent-guides'
Plug 'rigellute/rigel'
Plug 'rakr/vim-one'
Plug 'morhetz/gruvbox'
Plug 'vim-airline/vim-airline'
Plug 'chase/vim-ansible-yaml'
Plug 'Xuyuanp/nerdtree-git-plugin'
Plug 'idanarye/vim-merginal'
Plug 'jeetsukumaran/vim-buffergator'
Plug 'fisadev/vim-isort'
"" Plug 'python/black'
Plug 'xolox/vim-session'
Plug 'luochen1990/rainbow'
Plug 'scrooloose/nerdcommenter'
Plug 'iberianpig/tig-explorer.vim'
"" Plug 'ryanoasis/nerd-fonts'
Plug 'ryanoasis/vim-devicons'
Plug 'tiagofumo/vim-nerdtree-syntax-highlight'
Plug 'rhysd/devdocs.vim'
Plug 'tpope/vim-rhubarb'
Plug 'asins/renamer.vim'
Plug 'inkarkat/vim-ingo-library'
Plug 'inkarkat/vim-spellcheck'
Plug 'integralist/vim-mypy'
Plug 'jmcantrell/vim-virtualenv'

Plug 'davidhalter/jedi-vim'
Plug 'Shougo/deoplete.nvim'
Plug 'zchee/deoplete-jedi'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'

Plug 'chriskempson/base16-vim'

Plug 'jremmen/vim-ripgrep'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'chengzeyi/fzf-preview.vim'

Plug 'whiteinge/diffconflicts'

" Paint lines and paragraphs
Plug 'lpinilla/vim-codepainter'


" Extend fugitive.vim to support Bitbucket URLs in :Gbrowse.
Plug 'tommcdo/vim-fubitive'

Plug 'pixelneo/vim-python-docstring'

" All of your Plugs must be added before the following line
" To ignore plugin indent changes, instead use:
call plug#end()


let g:deoplete#enable_at_startup = 1

"
" Brief help
" :PlugList       - lists configured plugins
" :PlugInstall    - installs plugins; append `!` to update or just :PlugUpdate
" :PlugSearch foo - searches for foo; append `!` to refresh local cache
" :PlugClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plug stuff after this line
let g:NERDTreeNodeDelimiter = "\u00a0"
syntax on

set shell=/bin/bash
set ruler
set tabstop=4 shiftwidth=4 expandtab
set backspace=indent,eol,start
set tags=./tags
set hlsearch
set nofoldenable    "" disable folding
set colorcolumn=89
set cursorline

map <F4> :TagbarToggle<CR>
map <F3> :NERDTreeToggle<CR>
let NERDTreeIgnore = ['\.pyc$', '\.pyo$']
map <F2> :TaskList<CR>

"" autocmd FileType python map <buffer> <F8> :call flake8#Flake8()<CR>


"" let g:indent_guides_enable_on_vim_startup = 1
Plug 'pixelneo/vim-python-docstring'

"""" enable the theme
syntax enable
let g:airline#extensions#ale#enabled = 1
" disable mode
let g:airline_section_a = ''
" disable file type
let g:airline_section_x = ''
" disable file encoding
let g:airline_section_y = ''
" show only line and column
let g:airline_section_z = '%l:%c'

" update tagbar faster
set updatetime=500


nmap <silent> <leader>aj :ALENext<cr>
nmap <silent> <leader>ak :ALEPrevious<cr>

let g:ansible_options = {'documentation_mapping': '<C-K>'}

let g:loaded_matchparen=1
let g:rainbow_active = 1

let g:session_autoload = 'no'
let g:session_autosave = 'no'

"" Gdiff vertical
set diffopt+=vertical


"" open tig with current file
nnoremap <Leader>T :TigOpenCurrentFile<CR>

"" open tig with Project root path
nnoremap <Leader>t :TigOpenProjectRootDir<CR>

"" open tig grep
nnoremap <Leader>g :TigGrep<CR>

"" resume from last grep
nnoremap <Leader>r :TigGrepResume<CR>

"" open tig grep with the selected word
vnoremap <Leader>g y:TigGrep<Space><C-R>"<CR>

"" open tig grep with the word under the cursor
nnoremap <Leader>cg :<C-u>:TigGrep<Space><C-R><C-W><CR>

"" open tig blame with current file
nnoremap <Leader>b :TigBlame<CR>

"set encoding=UTF-8
"set guifont=DroidSansMono\ Nerd\ Font\ 10
"let g:airline_powerline_fonts = 1
"let g:webdevicons_enable_nerdtree = 1
"let g:webdevicons_conceal_nerdtree_brackets = 1
"" loading the plugin
"let g:webdevicons_enable = 1


"" https://github.com/tiagofumo/vim-nerdtree-syntax-highlight
let s:blue = "689FB6"
let g:NERDTreeExtensionHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExtensionHighlightColor['py'] = s:blue " sets the color of css files to blue

"" devdocs.io
nmap K <Plug>(devdocs-under-cursor-all)

let g:instant_markdown_open_to_the_world = 1
""let g:instant_markdown_autoscroll = 0

"" Cut/Copy/Paste
vmap <C-c> "+yi
vmap <C-x> "+c
vmap <C-v> c<ESC>"+p
imap <C-v> <C-r><C-o>+


" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'



" Jedi is used only for jumping to definition, not for completion.
let g:jedi#completions_enabled = 0

"colorscheme rigel
"let g:rigel_airline = 1
"let g:airline_theme = 'rigel'

"colorscheme one
"let g:airline_theme='one'
"set background=dark       " for the dark version
"let g:one_allow_italics = 1 " I love italic for comments
"colorscheme one

" ALE Python fixers
let g:ale_fixers = {'python': ['isort', 'black', 'flake8', 'remove_trailing_lines', 'trim_whitespace']}
let g:ale_python_flake8_options = '--ignore=E501'
" Set this variable to 1 to fix files when you save them.
"" let g:ale_fix_on_save = 1


" push cwindow to the bottom, instead of opening in tagbar
autocmd FileType qf wincmd J
command! -nargs=0 FT enew <bar> FZFTags

" Jenkinsfile highlighting
au BufNewFile,BufRead Jenkinsfile setf groovy

" bitbucket GBrowse url
"let g:fubitive_domain_pattern = 'code\.example\.com'


autocmd InsertEnter * hi clear LineNr | hi LineNr ctermfg=blue

autocmd InsertLeave * hi clear LineNr | hi LineNr ctermfg=green

set redrawtime=10000

