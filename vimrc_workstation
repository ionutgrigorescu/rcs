set nocompatible              " be iMproved, required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

" The following are examples of different formats supported.
" Keep Plugin commands between vundle#begin/end.
" plugin on GitHub repo
Plugin 'tpope/vim-fugitive'
" plugin from http://vim-scripts.org/vim/scripts.html
" Plugin 'L9'
" Git plugin not hosted on GitHub
Plugin 'git://git.wincent.com/command-t.git'
" git repos on your local machine (i.e. when working on your own plugin)
"Plugin 'file:///home/gmarik/path/to/plugin'
" The sparkup vim script is in a subdirectory of this repo called vim.
" Pass the path to set the runtimepath properly.
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" Install L9 and avoid a Naming conflict if you've already installed a
" different version somewhere else.
" Plugin 'ascenator/L9', {'name': 'newL9'}

Plugin 'scrooloose/nerdtree'
Plugin 'majutsushi/tagbar'
Plugin 'xolox/vim-easytags'
Plugin 'xolox/vim-misc'
Plugin 'airblade/vim-gitgutter'
Plugin 'nvie/vim-flake8'
Plugin 'pythoncomplete'
Plugin 'valloric/youcompleteme'
Plugin 'rdnetto/ycm-generator'
Plugin 'suan/vim-instant-markdown', {'rtp': 'after'}
Plugin 'kkoomen/vim-doge'
Plugin 'w0rp/ale'
Plugin 'fisadev/fixedtasklist.vim'
Plugin 'nathanaelkane/vim-indent-guides'
Plugin 'rigellute/rigel'
Plugin 'vim-airline/vim-airline'
Plugin 'chase/vim-ansible-yaml'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'idanarye/vim-merginal'
Plugin 'jeetsukumaran/vim-buffergator'
Plugin 'fisadev/vim-isort'
"" Plugin 'python/black'
Plugin 'xolox/vim-session'
Plugin 'luochen1990/rainbow'
Plugin 'scrooloose/nerdcommenter'
Plugin 'iberianpig/tig-explorer.vim'
""Plugin 'ryanoasis/nerd-fonts'
Plugin 'ryanoasis/vim-devicons'
Plugin 'tiagofumo/vim-nerdtree-syntax-highlight'
Plugin 'psf/black'



" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on
"
" Brief help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
"
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line
let g:NERDTreeNodeDelimiter = "\u00a0"
syntax on

set shell=/bin/bash
set shell=/bin/bash
set ruler
set tabstop=4 shiftwidth=4 expandtab
set backspace=indent,eol,start
set tags=./tags
set hlsearch
set nofoldenable    "" disable folding


map <F4> :TagbarToggle<CR>
map <F3> :NERDTreeToggle<CR>
let NERDTreeIgnore = ['\.pyc$', '\.pyo$']
map <F2> :TaskList<CR>

"" autocmd FileType python map <buffer> <F8> :call flake8#Flake8()<CR>


let g:doge_doc_standard_python = 'google'
let g:indent_guides_enable_on_vim_startup = 1


"""" enable 24bit true color
set termguicolors

"""" enable the theme
syntax enable
colorscheme rigel

let g:rigel_airline = 1
let g:airline_theme = 'rigel'

let g:airline#extensions#ale#enabled = 1
" disable mode
let g:airline_section_a = ''
" disable file type
let g:airline_section_x = ''
" disable file encoding
let g:airline_section_y = ''
" show only line and column
let g:airline_section_z = '%l:%c'

" update tagbar faster
set updatetime=500


nmap <silent> <leader>aj :ALENext<cr>
nmap <silent> <leader>ak :ALEPrevious<cr>

let g:ansible_options = {'documentation_mapping': '<C-K>'}

let g:loaded_matchparen=1
let g:rainbow_active = 1

let g:session_autoload = 'no'
let g:session_autosave = 'no'

"" Gdiff vertical
set diffopt+=vertical


"" open tig with current file
nnoremap <Leader>T :TigOpenCurrentFile<CR>

"" open tig with Project root path
nnoremap <Leader>t :TigOpenProjectRootDir<CR>

"" open tig grep
nnoremap <Leader>g :TigGrep<CR>

"" resume from last grep
nnoremap <Leader>r :TigGrepResume<CR>

"" open tig grep with the selected word
vnoremap <Leader>g y:TigGrep<Space><C-R>"<CR>

"" open tig grep with the word under the cursor
nnoremap <Leader>cg :<C-u>:TigGrep<Space><C-R><C-W><CR>

"" open tig blame with current file
nnoremap <Leader>b :TigBlame<CR>

set encoding=UTF-8
set guifont=DroidSansMono\ Nerd\ Font\ 11
let g:airline_powerline_fonts = 1
let g:webdevicons_enable_nerdtree = 1
let g:webdevicons_conceal_nerdtree_brackets = 1
" loading the plugin
let g:webdevicons_enable = 1



"let g:NERDTreeIndicatorMapCustom = {
    "\ "Modified"  : "✹",
    "\ "Staged"    : "✚",
    "\ "Untracked" : "✭",
    "\ "Renamed"   : "➜",
    "\ "Unmerged"  : "═",
    "\ "Deleted"   : "✖",
    "\ "Dirty"     : "✗",
    "\ "Clean"     : "✔︎",
    "\ 'Ignored'   : '☒',
    "\ "Unknown"   : "?"
    "\ }

"" https://github.com/tiagofumo/vim-nerdtree-syntax-highlight
let s:blue = "689FB6"
let g:NERDTreeExtensionHighlightColor = {} " this line is needed to avoid error
let g:NERDTreeExtensionHighlightColor['py'] = s:blue " sets the color of css files to blue

